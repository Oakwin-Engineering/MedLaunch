{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/vehbikaraagac/Desktop/MedLaunch/client/data/fakeTableData.ts"],"sourcesContent":["// Table data matching the screenshot layout, color groupings, and structure\nexport const tableData = [\n  // Initial Visits Section (Yellow)\n  {\n    section: \"Initial Visits\",\n    type: \"data\",\n    code: \"99374\",\n    values: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n    total: 7,\n    coding: \"7%\",\n    colorGroup: \"yellow\",\n  },\n  {\n    section: \"Initial Visits\",\n    type: \"data\",\n    code: \"99375\",\n    values: [1, 2, 1, 1, 2, 3, 2, 1, 2, 1, 3, 2],\n    total: 21,\n    coding: \"5%\",\n    colorGroup: \"yellow\",\n  },\n  {\n    section: \"Initial Visits\",\n    type: \"data\",\n    code: \"99376\",\n    values: [11, 16, 17, 9, 12, 15, 18, 17, 14, 16, 13, 17],\n    total: 159,\n    coding: \"92%\",\n    colorGroup: \"yellow\",\n  },\n  {\n    section: \"Initial Visits\",\n    type: \"total\",\n    label: \"Total\",\n    values: [14, 19, 21, 12, 15, 27, 23, 12, 18, 27, 18, 27],\n    total: 273,\n    coding: \"\",\n    colorGroup: \"yellow\",\n  },\n\n  // Subsequent Visits Section (Orange)\n  {\n    section: \"Subsequent Visits\",\n    type: \"data\",\n    code: \"99377\",\n    values: [5, 3, 2, 4, 6, 5, 4, 3, 5, 4, 6, 5],\n    total: 52,\n    coding: \"2%\",\n    colorGroup: \"orange\",\n  },\n  {\n    section: \"Subsequent Visits\",\n    type: \"data\",\n    code: \"99378\",\n    values: [96, 19, 47, 45, 51, 38, 42, 36, 44, 49, 47, 52],\n    total: 559,\n    coding: \"35%\",\n    colorGroup: \"orange\",\n  },\n  {\n    section: \"Subsequent Visits\",\n    type: \"data\",\n    code: \"99379\",\n    values: [174, 123, 34, 65, 89, 111, 97, 127, 175, 98, 112, 137],\n    total: 1158,\n    coding: \"56%\",\n    colorGroup: \"orange\",\n  },\n  {\n    section: \"Subsequent Visits\",\n    type: \"data\",\n    code: \"99317\",\n    values: [42, 39, 2, 66, 53, 47, 51, 48, 57, 54, 49, 52],\n    total: 553,\n    coding: \"9%\",\n    colorGroup: \"orange\",\n  },\n  {\n    section: \"Subsequent Visits\",\n    type: \"total\",\n    label: \"Total\",\n    values: [312, 181, 83, 111, 273, 278, 196, 279, 277, 275, 199, 211],\n    total: 2325,\n    coding: \"\",\n    colorGroup: \"orange\",\n  },\n\n  // Discharge Section (Grey)\n  {\n    section: \"Discharge\",\n    type: \"data\",\n    code: \"99315\",\n    values: [2, 1, 3, 2, 1, 2, 3, 1, 2, 3, 2, 1],\n    total: 23,\n    coding: \"31%\",\n    colorGroup: \"grey\",\n  },\n  {\n    section: \"Discharge\",\n    type: \"data\",\n    code: \"99316\",\n    values: [1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1],\n    total: 14,\n    coding: \"69%\",\n    colorGroup: \"grey\",\n  },\n  {\n    section: \"Discharge\",\n    type: \"total\",\n    label: \"Total\",\n    values: [7, 7, 1, 1, 7, 7, 7, 7, 7, 7, 7, 7],\n    total: 13,\n    coding: \"\",\n    colorGroup: \"grey\",\n  },\n\n  // Overall Totals (Blue)\n  {\n    section: \"Totals\",\n    type: \"total\",\n    label: \"Total Visits\",\n    values: [332, 197, 97, 96, 122, 145, 217, 188, 199, 221, 187, 275],\n    total: 2792,\n    coding: \"177%\",\n    colorGroup: \"blue\",\n  },\n\n  // RVUs (Blue)\n  {\n    section: \"RVUs\",\n    type: \"data\",\n    label: \"Work RVUs\",\n    values: [\n      624.1, 525.96, 168.82, 219.76, 312.45, 489.22, 517.33, 455.12, 388.76,\n      412.88, 397.23, 579.67,\n    ],\n    total: 4997.1,\n    coding: \"98%\",\n    colorGroup: \"blue\",\n    isSectionHeader: true,\n  },\n  {\n    section: \"RVUs\",\n    type: \"data\",\n    label: \"Work RVUs per patient\",\n    values: [\n      1.88, 2.13, 1.76, 1.8, 2.71, 2.78, 1.95, 2.12, 2.74, 1.99, 2.11, 2.15,\n    ],\n    total: 2.71,\n    coding: \"97%\",\n    colorGroup: \"blue\",\n  },\n\n  // Charges (Yellow/Green)\n  {\n    section: \"Charges\",\n    type: \"data\",\n    label: \"Charges\",\n    values: [\n      57445, 44479.5, 41179, 27677, 25477, 33217, 29177, 31757, 35887, 29977,\n      26577, 35577,\n    ],\n    total: 397313,\n    coding: \"177%\",\n    colorGroup: \"yellow\",\n    isCurrency: true,\n    isSectionHeader: true,\n  },\n  {\n    section: \"Charges\",\n    type: \"data\",\n    label: \"Average charges per patient\",\n    values: [\n      173.73, 181.36, 122.81, 169.43, 155.22, 167.12, 148.99, 177.34, 162.45,\n      158.77, 166.11, 174.97,\n    ],\n    total: 171.33,\n    coding: \"98%\",\n    colorGroup: \"yellow\",\n    isCurrency: true,\n  },\n\n  // Payments (Green)\n  {\n    section: \"Payments\",\n    type: \"data\",\n    label: \"Payments\",\n    values: [\n      38689, 19638, 16153, 15777, 17277, 27177, 18977, 21757, 27577, 19877,\n      18477, 22777,\n    ],\n    total: 239437,\n    coding: \"63%\",\n    colorGroup: \"green\",\n    isCurrency: true,\n    isSectionHeader: true,\n  },\n  {\n    section: \"Payments\",\n    type: \"data\",\n    label: \"Average receipts per patient\",\n    values: [116.55, 99.5, 93.75, 133.79, 7, 7, 7, 7, 7, 7, 7, 7],\n    total: 176.71,\n    coding: \"\",\n    colorGroup: \"green\",\n    isCurrency: true,\n  },\n\n  // Adjustments (Pink)\n  {\n    section: \"Adjustments\",\n    type: \"data\",\n    label: \"Adjustments\",\n    values: [\n      42685, 18277, 12933, 17323, 11577, 13477, 12977, 12757, 11877, 12177,\n      11977, 12777,\n    ],\n    total: 189561,\n    coding: \"65%\",\n    colorGroup: \"pink\",\n    isCurrency: true,\n  },\n\n  // Provider Income (Orange)\n  {\n    section: \"Provider Income\",\n    type: \"data\",\n    label: \"Provider Income\",\n    values: [\n      \"$12,577\",\n      \"$13,277\",\n      \"$14,777\",\n      \"$12,977\",\n      \"$13,877\",\n      \"$14,577\",\n      \"$13,677\",\n      \"$14,277\",\n      \"$13,977\",\n      \"$14,377\",\n      \"$13,777\",\n      \"$14,177\",\n    ],\n    total: \"$164,677\",\n    coding: \"\",\n    colorGroup: \"orange\",\n    isCurrency: true,\n    isSectionHeader: true,\n  },\n  {\n    section: \"Provider Income\",\n    type: \"data\",\n    label: \"% of Payments\",\n    values: [\n      \"48%\",\n      \"52%\",\n      \"57%\",\n      \"53%\",\n      \"49%\",\n      \"51%\",\n      \"52%\",\n      \"57%\",\n      \"48%\",\n      \"53%\",\n      \"49%\",\n      \"51%\",\n    ],\n    total: \"51%\",\n    coding: \"\",\n    colorGroup: \"orange\",\n  },\n  {\n    section: \"Provider Income\",\n    type: \"data\",\n    label: \"Average income per patient\",\n    values: [\"$\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\"],\n    total: \"$\",\n    coding: \"\",\n    colorGroup: \"orange\",\n    isCurrency: true,\n  },\n  {\n    section: \"Provider Income\",\n    type: \"data\",\n    label: \"Average income per RVU\",\n    values: [\"$\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\", \"8\"],\n    total: \"$\",\n    coding: \"\",\n    colorGroup: \"orange\",\n    isCurrency: true,\n  },\n] as const;\n\n// Months for the table (short names)\nexport const tableMonths = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n  \"Totals\",\n  \"Coding %\",\n] as const;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":["file:///Users/vehbikaraagac/Desktop/MedLaunch/client/component/Table.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { tableData, tableMonths } from \"../data/fakeTableData\";\n\n// Map colorGroup to background color\nconst colorMap: Record<string, string> = {\n  yellow: \"#FFF9C4\",\n  orange: \"#FFE0B2\",\n  grey: \"#E0E0E0\",\n  blue: \"#B3E5FC\",\n  green: \"#C8E6C9\",\n  pink: \"#F8BBD0\",\n};\n\nfunction formatCurrency(value: number) {\n  return value.toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: 0,\n  });\n}\n\nexport default function FinancialKpiTable() {\n  return (\n    <TableContainer component={Paper} sx={{ boxShadow: 2, borderRadius: 2 }}>\n      <Table aria-label=\"financial performance table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ fontWeight: 700, fontSize: 15, width: 80 }}>\n              &nbsp;\n            </TableCell>\n            <TableCell sx={{ fontWeight: 700, fontSize: 15, width: 80 }}>\n              Code/Description\n            </TableCell>\n            {tableMonths.map((month) => (\n              <TableCell\n                key={month}\n                align=\"center\"\n                sx={{\n                  fontWeight: 700,\n                  fontSize: 15,\n                  background:\n                    month === \"Totals\"\n                      ? \"#D3D3D3\"\n                      : month === \"Coding %\"\n                        ? \"#E1A9E2\"\n                        : undefined,\n                }}\n              >\n                {month}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* Group rows by section */}\n          {(() => {\n            const grouped: Record<string, any[]> = {};\n            tableData.forEach((row) => {\n              if (!grouped[row.section]) grouped[row.section] = [];\n              grouped[row.section].push(row);\n            });\n            const verticalSections = [\n              \"Initial Visits\",\n              \"Subsequent Visits\",\n              \"Discharge\",\n            ];\n            return Object.entries(grouped).flatMap(([section, rows]) => {\n              if (verticalSections.includes(section)) {\n                // Render with vertical section label\n                return rows.map((row, rowIdx) => {\n                  const showSection = rowIdx === 0;\n                  const sectionColor =\n                    colorMap[row.colorGroup] ||\n                    colorMap[rows[0].colorGroup] ||\n                    \"#fff\";\n                  const isTotal = row.type === \"total\";\n                  return (\n                    <TableRow\n                      key={(row.code || row.label || \"row\") + section + rowIdx}\n                    >\n                      {showSection && (\n                        <TableCell\n                          rowSpan={rows.length}\n                          sx={{\n                            writingMode: \"vertical-rl\",\n                            textAlign: \"center\",\n                            background: isTotal ? sectionColor : sectionColor,\n                            fontWeight: 700,\n                            fontSize: 15,\n                            color: \"#222\",\n                            minWidth: 32,\n                            maxWidth: 32,\n                            borderRight: \"2px solid #fff\",\n                          }}\n                        >\n                          {section}\n                        </TableCell>\n                      )}\n                      <TableCell\n                        sx={{\n                          fontWeight: isTotal ? 700 : 500,\n                          fontSize: 14,\n                          background: isTotal ? sectionColor : undefined,\n                        }}\n                      >\n                        {row.code ? row.code : row.label}\n                      </TableCell>\n                      {row.values.map((val: any, i: number) => (\n                        <TableCell\n                          key={i}\n                          align=\"center\"\n                          sx={{\n                            fontWeight: isTotal ? 700 : 400,\n                            background: isTotal ? sectionColor : undefined,\n                          }}\n                        >\n                          {row.isCurrency && val ? formatCurrency(val) : val}\n                        </TableCell>\n                      ))}\n                      {/* Totals column (grey) */}\n                      <TableCell\n                        align=\"center\"\n                        sx={{\n                          fontWeight: isTotal ? 700 : 400,\n                          background: \"#D3D3D3\", // Always grey for Totals\n                        }}\n                      >\n                        {row.isCurrency && row.total\n                          ? formatCurrency(row.total)\n                          : row.total}\n                      </TableCell>\n                      {/* Coding % column (colored) */}\n                      <TableCell\n                        align=\"center\"\n                        sx={{\n                          fontWeight: isTotal ? 700 : 400,\n                          background: \"#E1A9E2\", // Always purple for Coding %\n                        }}\n                      >\n                        {row.coding}\n                      </TableCell>\n                    </TableRow>\n                  );\n                });\n              } else {\n                // Render with empty first cell and restore section color across the row\n                return rows.map((row, rowIdx) => {\n                  const sectionColor =\n                    colorMap[row.colorGroup] ||\n                    colorMap[rows[0].colorGroup] ||\n                    undefined;\n                  const isTotal = row.type === \"total\";\n                  // Only use section color for isSectionHeader rows, otherwise white\n                  const rowBg = row.isSectionHeader ? sectionColor : \"#fff\";\n                  return (\n                    <TableRow\n                      key={(row.code || row.label || \"row\") + section + rowIdx}\n                    >\n                      {/* Empty section cell for alignment */}\n                      <TableCell\n                        sx={{ background: rowBg, minWidth: 32, maxWidth: 32 }}\n                      />\n                      <TableCell\n                        sx={{\n                          fontWeight: isTotal ? 700 : 500,\n                          fontSize: 14,\n                          background: rowBg,\n                        }}\n                      >\n                        {row.code ? row.code : row.label}\n                      </TableCell>\n                      {row.values.map((val: any, i: number) => (\n                        <TableCell\n                          key={i}\n                          align=\"center\"\n                          sx={{\n                            fontWeight: isTotal ? 700 : 400,\n                            background: rowBg,\n                          }}\n                        >\n                          {row.isCurrency && val ? formatCurrency(val) : val}\n                        </TableCell>\n                      ))}\n                      {/* Totals column (grey) */}\n                      <TableCell\n                        align=\"center\"\n                        sx={{\n                          fontWeight: isTotal ? 700 : 400,\n                          background: \"#D3D3D3\", // Always grey for Totals\n                        }}\n                      >\n                        {row.isCurrency && row.total\n                          ? formatCurrency(row.total)\n                          : row.total}\n                      </TableCell>\n                      {/* Coding % column (colored) */}\n                      <TableCell\n                        align=\"center\"\n                        sx={{\n                          fontWeight: isTotal ? 700 : 400,\n                          background: \"#E1A9E2\", // Always purple for Coding %\n                        }}\n                      >\n                        {row.coding}\n                      </TableCell>\n                    </TableRow>\n                  );\n                });\n              }\n            });\n          })()}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["file:///Users/vehbikaraagac/Desktop/MedLaunch/client/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme } from \"@mui/material/styles\";\nimport ApartmentIcon from \"@mui/icons-material/Apartment\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { AppProvider, type Navigation } from \"@toolpad/core/AppProvider\";\nimport { DashboardLayout } from \"@toolpad/core/DashboardLayout\";\nimport { useDemoRouter } from \"@toolpad/core/internal\";\nimport FinancialKpiTable from \"../component/Table\";\n\nconst NAVIGATION: Navigation = [\n  {\n    segment: \"reports\",\n    title: \"Reports\",\n    icon: <ApartmentIcon />,\n    children: [\n      {\n        segment: \"sales\",\n        title: \"Sales\",\n        icon: <PersonIcon />,\n      },\n      {\n        segment: \"traffic\",\n        title: \"Traffic\",\n        icon: <PersonIcon />,\n      },\n    ],\n  },\n  {\n    segment: \"integrations\",\n    title: \"Integrations\",\n    icon: <ApartmentIcon />,\n  },\n];\n\nconst demoTheme = createTheme({\n  cssVariables: {\n    colorSchemeSelector: \"data-toolpad-color-scheme\",\n  },\n  colorSchemes: { light: true, dark: true },\n});\n\nfunction DemoPageContent({ pathname }: { pathname: string }) {\n  return (\n    <Box>\n      <Typography>Dashboard content for {pathname}</Typography>\n    </Box>\n  );\n}\n\nexport default function DashboardLayoutBasic() {\n  const router = useDemoRouter();\n\n  return (\n    <AppProvider\n      navigation={NAVIGATION}\n      router={router}\n      theme={demoTheme}\n      branding={{ title: \"MedLaunch Admin\", logo: \"\" }}\n    >\n      <DashboardLayout>\n        <div style={{ padding: 20 }}>\n          <FinancialKpiTable />\n        </div>\n      </DashboardLayout>\n    </AppProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;AAaA,MAAM,aAAyB;IAC7B;QACE,SAAS;QACT,OAAO;QACP,oBAAM,6LAAC,iKAAA,CAAA,UAAa;;;;;QACpB,UAAU;YACR;gBACE,SAAS;gBACT,OAAO;gBACP,oBAAM,6LAAC,8JAAA,CAAA,UAAU;;;;;YACnB;YACA;gBACE,SAAS;gBACT,OAAO;gBACP,oBAAM,6LAAC,8JAAA,CAAA,UAAU;;;;;YACnB;SACD;IACH;IACA;QACE,SAAS;QACT,OAAO;QACP,oBAAM,6LAAC,iKAAA,CAAA,UAAa;;;;;IACtB;CACD;AAED,MAAM,YAAY,CAAA,GAAA,8MAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,cAAc;QACZ,qBAAqB;IACvB;IACA,cAAc;QAAE,OAAO;QAAM,MAAM;IAAK;AAC1C;AAEA,SAAS,gBAAgB,KAAkC;QAAlC,EAAE,QAAQ,EAAwB,GAAlC;IACvB,qBACE,6LAAC,yJAAA,CAAA,UAAG;kBACF,cAAA,6LAAC,uKAAA,CAAA,UAAU;;gBAAC;gBAAuB;;;;;;;;;;;;AAGzC;KANS;AAQM,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,+JAAA,CAAA,gBAAa,AAAD;IAE3B,qBACE,6LAAC,yKAAA,CAAA,cAAW;QACV,YAAY;QACZ,QAAQ;QACR,OAAO;QACP,UAAU;YAAE,OAAO;YAAmB,MAAM;QAAG;kBAE/C,cAAA,6LAAC,iLAAA,CAAA,kBAAe;sBACd,cAAA,6LAAC;gBAAI,OAAO;oBAAE,SAAS;gBAAG;0BACxB,cAAA,6LAAC,sHAAA,CAAA,UAAiB;;;;;;;;;;;;;;;;;;;;AAK5B;GAjBwB;;QACP,+JAAA,CAAA,gBAAa;;;MADN","debugId":null}}]
}